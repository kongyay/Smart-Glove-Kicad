#!/bin/sh 
echo "Starting MUX PROJECT"
#mux project

#!/bin/sh
#
# Setup a work space called `work` with two windows
# first window has 3 panes. 
# The first pane set at 65%, split horizontally, set to api root and running vim
# pane 2 is split at 25% and running redis-server 
# pane 3 is set to api root and bash prompt.
# note: `api` aliased to `cd ~/path/to/work`
#
# windows:
#   - server: 
#       layout: main-vertical
#       panes:
#         - cd python/flask/ ; python main.py
#         - cd web/client
#   - editor:
#       layout: main-vertical
#       panes:
#         - cd python/flask 
#         - cd web/client 
#   - authen: cd /home/pi/auto-authen-kmitl ; python3 authen.py 

session="project"

# set up tmux
tmux start-server

# create a new window called authen
tmux new-session -d -s $session -n authen
tmux send-keys "cd /home/pi/auto-authen-kmitl ; python3 authen.py" C-m 

# create a new tmux session, starting vim from a saved session in the new window
tmux new-window -t $session:1 -n server

# Select pane 1, set dir to api, run server

tmux send-keys "cd /home/pi/python/flask/ ; python main.py" C-m 

# Split pane 1 horizontal, 2 vertiacally by 60%, for editor
tmux splitw -h 
tmux splitw -v -p 60
tmux send-keys "cd /home/pi/web/client" C-m 

# Select pane 1
tmux selectp -t 1

# return to main window
tmux select-window -t $session:1
tmux selectp -t 1 

# Finished setup, attach to the tmux session!
#tmux attach-session -t $session

echo "MUX PROJECT Started !!!!"